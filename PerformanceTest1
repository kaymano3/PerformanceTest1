#include <FEHLCD.h>
#include <FEHIO.h>
#include <FEHUtility.h>
#include <FEHMotor.h>
#include <FEHRPS.h>
#include <FEHServo.h>
//Declarations for encoders & motors
DigitalEncoder right_encoder(FEHIO::P0_7);
DigitalEncoder left_encoder(FEHIO::P3_0);
FEHMotor right_motor(FEHMotor::Motor1,9.0);
FEHMotor left_motor(FEHMotor::Motor0,9.0);
AnalogInputPin cds (FEHIO::P0_1);
FEHServo clawServo(FEHIO::Servo7);
void move_forward(int percent, int counts) //using encoders
{
    //Reset encoder counts
    right_encoder.ResetCounts();
    left_encoder.ResetCounts();

    //Set both motors to desired percent
    right_motor.SetPercent(percent);
    left_motor.SetPercent(percent);

    //While the average of the left and right encoder is less than counts,
    //keep running motors
    while((left_encoder.Counts() + right_encoder.Counts()) / 2. < counts);

    //Turn off motors
    right_motor.Stop();
    left_motor.Stop();
}
void turn(int leftPercent, int rightPercent, int counts) {
    //Reset encoder counts
    right_encoder.ResetCounts();
    left_encoder.ResetCounts();

    //Set both motors to desired percent
    right_motor.SetPercent(rightPercent);
    left_motor.SetPercent(leftPercent);

    //While the average of the left and right encoder is less than counts,
    //keep running motors
    while((left_encoder.Counts() + right_encoder.Counts()) / 2. < counts);

    //Turn off motors
    right_motor.Stop();
    left_motor.Stop();
}


int main(void)
{   if(cds.Value()<3){
    int motor_percent = 25; //Input power level here
    int expected_counts = 251; //Input theoretical counts here

    float x, y; //for touch screen

    //Initialize the screen
    LCD.Clear(BLACK);
    LCD.SetFontColor(WHITE);

    LCD.WriteLine("Shaft Encoder Exploration Test");
    LCD.WriteLine("Touch the screen");
    while(!LCD.Touch(&x,&y)); //Wait for screen to be pressed
    while(LCD.Touch(&x,&y)); //Wait for screen to be unpressed
    move_forward(motor_percent, expected_counts);
    int leftMotorPercent=0;
    int rightMotorPercent=25;
    expected_counts=300;
    turn(leftMotorPercent,rightMotorPercent,expected_counts);
    expected_counts=167;
    move_forward(motor_percent, expected_counts);
    expected_counts=246.3;
    turn(leftMotorPercent,rightMotorPercent,expected_counts);
    motor_percent=50;
    expected_counts=1046;
     move_forward(motor_percent,expected_counts);
    motor_percent=25;
    expected_counts=837;
    move_forward(motor_percent,expected_counts);
    clawServo.SetDegree(90); 
    clawServo.SetDegree(0);
    motor_percent=-25;
    expected_counts=293;
    move_forward(motor_percent,expected_counts);
    expected_counts=320;
    leftMotorPercent=25;
    rightMotorPercent=0;
    turn(leftMotorPercent,rightMotorPercent,expected_counts);
    expected_counts=711;
    motor_percent=25;
    move_forward(motor_percent,expected_counts);
    motor_percent=50;
    expected_counts=544;
    move_forwrad(motor,percent,expected_counts);
    right_motor.Stop();
    left_motor.Stop();
    LCD.WriteLine("Yay")
    Sleep(2.0); //Wait for counts to stabilize
    return 0;
    }
}
